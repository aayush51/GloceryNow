<%@page import="model.Category"%>
<%@page import="java.util.List"%>
<%@page import="javax.persistence.Query"%>
<%@page import="javax.persistence.EntityManager"%>
<%@page import="javax.persistence.Persistence"%>
<%@page import="javax.persistence.EntityManagerFactory"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<%@page import="java.sql.SQLException"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>

<%
String email = (String) session.getAttribute("email");
String password = (String) session.getAttribute("password");

if (email == null || password == null) {
	RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
	request.setAttribute("error", "Logged Out");
	rd.forward(request, response);
} else {
	try {
		Class.forName("org.postgresql.Driver");
		Connection con = DriverManager
		.getConnection("jdbc:postgresql://localhost:5432/shopkeeper?user=postgres&password=root");
		PreparedStatement ps = con.prepareStatement("select * from users where user_email=?");
		ps.setString(1, email);
		ResultSet rs = ps.executeQuery();
		if (rs.next()) {
	String dbPassword = rs.getString("user_password");
	if (password.equals(dbPassword)) {
%>


<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Category Management</title>
<style>
body {
	font-family: Arial, sans-serif;
	margin: 0;
	padding: 0;
	background-color: #f9f9f9;
}

.admin-container {
	max-width: 1200px;
	margin: 40px auto;
	padding: 20px;
	background-color: #fff;
	border: 1px solid #ddd;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.admin-header {
	background-color: #337ab7;
	color: #fff;
	padding: 30px 10px;
	text-align: center;
	border-bottom: 1px solid #337ab7;
	position: relative;
}

.admin-header h1 {
	margin-top: 0;
	font-size: 24px;
}

.logout-button {
	position: absolute;
	top: 10px;
	right: 10px;
	background-color: #e74c3c;
	color: #fff;
	padding: 10px 20px;
	border: none;
	font-size: 16px;
	cursor: pointer;
	border-radius: 5px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.logout-button:hover {
	background-color: #c0392b;
}

/* new css for tables */
.table-container {
	overflow-x: auto;
}

table {
	border-collapse: collapse;
	width: 100%;
	border: 1px solid #ddd;
}

th, td {
	border: 1px solid #ddd;
	padding: 10px;
	text-align: left;
}

th {
	background-color: #3498db;
	color: #fff;
	font-weight: bold;
}

tr:nth-child(even) {
	background-color: #f9f9f9;
}

tr:hover {
	background-color: #f2f2f2;
}

img {
	width: 100px;
	height: 100px;
	border-radius: 5%;
	margin: 10px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.update-button {
	background-color: #337ab7;
	color: #fff;
	padding: 10px 20px;
	border: none;
	font-size: 16px;
	cursor: pointer;
	border-radius: 5px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.update-button:hover {
	background-color: #23527c;
}

.remove-button {
	background-color: #e74c3c;
	color: #fff;
	padding: 10px 20px;
	border: none;
	font-size: 16px;
	cursor: pointer;
	border-radius: 5px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.remove-button:hover {
	background-color: #c0392b;
}

.admin-footer {
	background-color: #f0f0f0;
	padding: 10px;
	text-align: center;
	clear: both;
	border-top: 1px solid #ddd;
}

.admin-footer p {
	margin-bottom: 0;
	font-size: 14px;
}

.btn {
	padding: 10px 20px;
	border-radius: 10px;
	border: none;
	color: white;
	cursor: pointer;
	background-color: #4CAF50;
	width: 48%;
	font-size: 16px;
	margin: 10px;
}

.btn:hover {
	background-color: #3e8e41;
}

.success {
	color: #2ecc71;
	font-size: 18px;
	font-weight: bold;
	margin-bottom: 20px;
	text-align: center;
}

.error {
	color: #e74c3c;
	font-size: 16px;
	margin-bottom: 10px;
	text-align: center;
}

.categories {
	background-color: #f0f0f0;
	padding: 20px;
	border-bottom: 1px solid #ddd;
	animation: slideIn 1s;
}

.categories .row {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
}

.categories .col-md-3 {
	width: 20%;
	margin: 10px;
}

.categories .card {
	background-color: #fff;
	padding: 20px;
	border: 1px solid #ddd;
	border-radius: 10px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	transition: transform 0.2s ease-in-out;
	animation: fadeIn 1s;
	text-align: center;
}

.categories .card:hover {
	transform: scale(1.05);
}

.categories .card img {
	object-fit: cover;
	object-position: top 20px right 30px;
	width: 90%;
	height: 10.5rem;
	animation: zoomIn 1s;
	border-radius: 20px;
}

.categories .card h3 {
	font-weight: bold;
	margin-top: 10px;
	text-align: center;
	animation: fadeIn 1s;
	height: 40px;
}

.categories .card p {
	margin-bottom: 25px;
	text-align: center;
	animation: fadeIn 1s;
}

form {
	display: inline-flex;
}

form button {
	margin: .5rem;
}

.addbtn {
	padding: 10px 24px;
	border-radius: 10px;
	border: none;
	color: white;
	cursor: pointer;
	background-color: #3498db;
	display:block;
	width: auto;
	font-size: 24px;

}
a.addbtn {
	text-decoration: none;
}
.addbtn:hover {
	background-color: #2ecc71;
}
</style>
</head>
<body>
	<div class="admin-container">
		<div class="admin-header">
			<h1>Category Management</h1>
			<p>This page allows you to manage categories in the database.</p>
			<a href="logout" class="logout-button">Logout</a>

			<h3 class="success">${operation}</h3>
			<h3 class="error">${error}</h3>
		</div>
		<div class="categories">
			<div class="row">
				<%
				EntityManagerFactory emf = Persistence.createEntityManagerFactory("shop");
				EntityManager em = emf.createEntityManager();
				Query query = em.createQuery("select c from Category c");
				List<Category> categoryList = query.getResultList();
				if (categoryList != null) {
					for (Category category : categoryList) {
				%>

				<div class="col-md-3">
					<div class="card">
						<img src="<%=category.getImage()%>" alt="Product Image">
						<h3><%=category.getName()%></h3>
						<form action="categoryManagement" method="post">
							<input type="hidden" name="operation" value="updateCategory">
							<input type="hidden" name="categoryName"
								value="<%=category.getName()%>">
							<button class="update-button" type="submit">Update</button>
						</form>
						<form action="categoryManagement" method="post">
							<input type="hidden" name="operation" value="removeCategory">
							<input type="hidden" name="categoryName"
								value="<%=category.getName()%>">
							<button class="remove-button" type="submit">Remove</button>
						</form>
					</div>
				</div>

				<%
				}
				}
				%>
				<div class="col-md-3">
					<div class="card addCategory">
						<img src="https://icons.veryicon.com/png/o/commerce-shopping/icon-of-lvshan-valley-mobile-terminal/home-category.png" alt="Product Image">
						<h3>Add New Category</h3>
						<p>Add a new category to the database.</p>
						<a href="addCategory.jsp" class="addbtn">+</a>
					</div>
				</div>
			</div>


			<div class="nav-btn">
				<button class="btn" onclick="location.href='adminHome.jsp'"><%="<"%></button>
				<button class="btn" onclick="location.href='categoryManagement.jsp'">&#10227;</button>
			</div>
		</div>
		<div class="admin-footer">
			<p>Made With ‚ù§ &copy; 2024 GloceryNow</p>
		</div>
	</div>
</body>
</html>

<%
} else {
RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
request.setAttribute("error", "Invalid email or password");
rd.forward(request, response);
}
} else {
RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
request.setAttribute("error", "Invalid email or password");
rd.forward(request, response);
}
} catch (ClassNotFoundException | SQLException e) {
e.printStackTrace();
}
}
%>