
<%@page import="model.Product"%>
<%@page import="javax.persistence.EntityManager"%>
<%@page import="javax.persistence.Persistence"%>
<%@page import="javax.persistence.EntityManagerFactory"%>
<%@page import="org.hibernate.internal.build.AllowSysOut"%>
<%@page import="java.sql.SQLException"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
	

<%
String email = (String) session.getAttribute("email");
String password = (String) session.getAttribute("password");

if (email == null || password == null) {
    RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
    request.setAttribute("error", "Logged Out");
    rd.forward(request, response);
} else {
    try {
        Class.forName("org.postgresql.Driver");
        Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/shopkeeper?user=postgres&password=root");
        PreparedStatement ps = con.prepareStatement("select * from users where user_email=?");
        ps.setString(1, email);
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            String dbPassword = rs.getString("user_password");
            if (password.equals(dbPassword)) {
            	System.out.println("Admin Logged in");

%>
<!DOCTYPE html>
<html>
<head>
<title>Admin Home</title>
<style>
body {
	font-family: Arial, sans-serif;
	margin: 0;
	padding: 0;
	background-color: #f9f9f9;
}

.admin-container {
	max-width: 1200px;
	margin: 40px auto;
	padding: 20px;
	background-color: #fff;
	border: 1px solid #ddd;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.admin-header {
	background-color: #337ab7;
	color: #fff;
	padding: 30px 10px;
	text-align: center;
	border-bottom: 1px solid #337ab7;
	position: relative;
}

.admin-header h1 {
	margin-top: 0;
	font-size: 24px;
}

.logout-button {
	position: absolute;
	top: 10px;
	right: 10px;
	background-color: #e74c3c;
	color: #fff;
	padding: 10px 20px;
	border: none;
	font-size: 16px;
	cursor: pointer;
	border-radius: 5px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.logout-button:hover {
	background-color: #c0392b;
}

.product-table {
	margin: 20px;
	padding: 20px;
	border: 1px solid #ddd;
	border-radius: 10px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.product-table th, .product-table td {
	padding: 10px;
	border-bottom: 1px solid #ddd;
}

.product-table th {
	background-color: #337ab7;
	color: #fff;
}

.product-table td {
	background-color: #fff;
}

.product-table tr:hover {
	background-color: #f9f9f9;
}

.card-container {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	padding: 20px;
}

.card {
	background-color: #fff;
	padding: 20px;
	border: 1px solid #ddd;
	border-radius: 10px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	margin: 20px;
	width: calc(50% - 40px);
	text-align: center;
}

.card h2 {
	margin-top: 0;
	color: #337ab7;
	font-size: 18px;
}

.card p {
	margin-bottom: 20px;
	color: #666;
	font-size: 14px;
}

.card a {
	text-decoration: none;
	color: #fff;
	background-color: #337ab7;
	padding: 10px 20px;
	border: none;
	font-size: 14px;
	cursor: pointer;
	border-radius: 5px;
	display: inline-block;
	width: 100%;
	max-width: 150px;
	margin: 0 auto;
}

.card a:hover {
	background-color: #23527c;
}

.admin-footer {
	background-color: #f0f0f0;
	padding: 10px;
	text-align: center;
	clear: both;
	border-top: 1px solid #ddd;
}

.admin-footer p {
	margin-bottom: 0;
	font-size: 14px;
}
</style>
</head>
<body>
	<div class="admin-container">
		<div class="admin-header">
			<h1>Welcome to the Admin Dashboard</h1>
			<p>This is the central hub for managing your application's data.</p>
			<a href="logout" class="logout-button">Logout</a>
		</div>
		<div class="card-container">
			<div class="card">
				<h2>View All Data</h2>
				<p>View all data in the database, including user information and
					transaction history.</p>
				<a href="viewData.jsp" class="btn">View All Data</a>
			</div>
			<div class="card">
				<h2>Add New Data</h2>
				<p>Add new data to the database, including user information and
					transaction history.</p>
				<a href="addData.jsp" class="btn">Add New Data</a>
			</div>
			<div class="card">
				<h2>Remove Data</h2>
				<p>Remove data from the database, including user information and
					transaction history.</p>
				<a href="removeData.jsp" class="btn">Remove Data</a>
			</div>
			<div class="card">
 <h2>Update Data</h2>
				<p>Update data in the database, including user information and
					transaction history.</p>
				<a href="updateData.jsp" class="btn">Update Data</a>
			</div>
		</div>
		<div class="product-table">
			<table>
				<tr>
					<th>ID</th>
					<th>Category</th>
					<th>Image</th>
					<th>Name</th>
					<th>Price</th>
					<th>Quantity</th>
					<th>Quantity Unit</th>
					<th>Actions</th>
				</tr>
				<% 
					EntityManagerFactory emf = Persistence.createEntityManagerFactory("shop");
					EntityManager em = emf.createEntityManager();
					Product product = em.find(Product.class, 100);
				%>
				
					<tr>
						<td>${product.getID()}</td>
						<td>${product.category}</td>
						<td><img src="${product.image}" alt="Product Image"></td>
						<td>${product.name}</td>
						<td>${product.price}</td>
						<td>${product.quantity}</td>
						<td>${product.quantityUnit}</td>
						<td>
							<a href="editProduct?id=${product.id}">Edit</a>
							<a href="deleteProduct?id=${product.id}">Delete</a>
						</td>
					</tr>
				<%
				
				%>
			</table>
		</div>
		<div class="admin-footer">
			<p>Made With ‚ù§ &copy; 2024 GloceryNow</p>
		</div>
	</div>
</body>
</html>

<%
            } else {
                RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
                request.setAttribute("error", "Invalid email or password");
                rd.forward(request, response);
            }
        } else {
            RequestDispatcher rd = request.getRequestDispatcher("adminLogin.jsp");
            request.setAttribute("error", "Invalid email or password");
            rd.forward(request, response);
        }
    } catch (ClassNotFoundException | SQLException e) {
        e.printStackTrace();
    }
}
%>