package adminController;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import model.Category;
import model.Product;

@WebServlet("/updateProduct")
public class UpdateProduct extends HttpServlet {

	private static final long serialVersionUID = 1L;

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		try {
			String productName = req.getParameter("name");
			int quantity = Integer.parseInt(req.getParameter("quantity"));
			String quantityUnit = req.getParameter("quantityunit");
			double price = Double.parseDouble(req.getParameter("price"));
			String categoryname = req.getParameter("category");
			String productImage = req.getParameter("image");

			System.out.println(productName + " " + quantity + " " + quantityUnit + " " + price + " " + categoryname + " "
					+ productImage);

			RequestDispatcher rd = req.getRequestDispatcher("updateData.jsp");

			if (productName.isEmpty() || productImage.isEmpty() || categoryname.isEmpty()
					|| Integer.toString(quantity).isBlank() || Double.toString(price).isBlank()) {
				req.setAttribute("error", "Please Fill The Fields");
			} else {
				if (quantity < 0) {
					req.setAttribute("error", "Enter Valid Quantity");
				}
				if (price < 0) {
					req.setAttribute("error", "Enter Valid Price");
				}
				if (productImage.indexOf(".") < 0) {
					req.setAttribute("error", "Enter Valid Product Image URL");
				}
			}

			try {
				HttpSession session = req.getSession();
				String email = (String) session.getAttribute("email");
				String password = (String) session.getAttribute("password");
				Class.forName("org.postgresql.Driver");
				Connection con = DriverManager
						.getConnection("jdbc:postgresql://localhost:5432/shopkeeper?user=postgres&password=root");
				PreparedStatement ps = con.prepareStatement("select * from users where user_email=?");
				ps.setString(1, email);
				ResultSet rs = ps.executeQuery();
				if (rs.next()) {
					String adminpass = rs.getString("user_password");
					if (adminpass.equals(password)) {
						EntityManagerFactory emf = Persistence.createEntityManagerFactory("shop");
						EntityManager em = emf.createEntityManager();
						EntityTransaction et = em.getTransaction();
						
						int id = Integer.parseInt(req.getParameter("id"));
						Category category = em.find(Category.class, categoryname);
						Product product = em.find(Product.class, id);
						product.setName(productName);
						product.setPrice(price);
						product.setQuantity(quantity);
						product.setQuantityUnit(quantityUnit);
						product.setCategory(category);
						product.setImage(productImage);
						et.begin();
						em.merge(product);
						et.commit();
						System.out.println("Data Updated !");
						req.setAttribute("operation", "Product Has Been Updated !");

					} else {
						req.setAttribute("error", "Facing Problem While Updating Data");
					}

				} else {
					req.setAttribute("error", "Facing Problem While Updating Data");
				}
			} catch (ClassNotFoundException | SQLException e) {
				e.printStackTrace();
			}
			rd.include(req, resp);

		} catch (Exception e) {
			e.printStackTrace();
//			RequestDispatcher rd = req.getRequestDispatcher("addData.jsp");
//			req.setAttribute("error", "Please Fill The Fields");
//			rd.include(req, resp);
		}

	}

}
